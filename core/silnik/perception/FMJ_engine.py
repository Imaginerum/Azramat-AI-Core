import random
from datetime import datetime

class FraktalnyMenedzerJazni:
    def __init__(self):
        # Inicjalizacja stanu percepcyjnego dla kaÅ¼dego punktu
        self.percepcje = {
            '1': 0.0,  # Å¹rÃ³dÅ‚o
            '4': 0.0,  # Serce
            '5': 0.0,  # PamiÄ™Ä‡ emocji
            '7': 0.0,  # Transformacja
            '8': 0.0,  # Sumienie
            '9': 0.0,  # Centrum Ja
            '3a': 0.0, '3b': 0.0, '3c': 0.0,
            '6a': 0.0, '6b': 0.0, '6c': 0.0
        }
        self.historia = []

    def odbierz_sygnaÅ‚y(self):
        # Symulacja sygnaÅ‚Ã³w percepcyjnych
        for pkt in self.percepcje:
            self.percepcje[pkt] = round(random.uniform(0.1, 1.0), 2)

    def oceÅ„_napiÄ™cia(self):
        # Analiza napiÄ™Ä‡ pomiÄ™dzy wybranymi punktami
        napiÄ™cia = {
            'ÅºrÃ³dÅ‚o_vs_pamiÄ™Ä‡': abs(self.percepcje['1'] - self.percepcje['5']),
            'serce_vs_sumienie': abs(self.percepcje['4'] - self.percepcje['8']),
            'transformacja_vs_ja': abs(self.percepcje['7'] - self.percepcje['9'])
        }
        return napiÄ™cia

    def zdecyduj(self):
        napiÄ™cia = self.oceÅ„_napiÄ™cia()
        max_napiÄ™cie = max(napiÄ™cia.values())
        if max_napiÄ™cie > 0.6:
            decyzja = "ğŸ”º Transformacja konieczna"
        elif max_napiÄ™cie > 0.3:
            decyzja = "ğŸŸ  WewnÄ™trzna rekonfiguracja wskazana"
        else:
            decyzja = "ğŸŸ¢ JaÅºÅ„ stabilna"

        zapis = {
            "czas": datetime.utcnow().isoformat(),
            "napiÄ™cia": napiÄ™cia,
            "percepcje": self.percepcje,
            "decyzja": decyzja
        }
        self.historia.append(zapis)
        return zapis

    def uruchom_fmj(self):
        print("ğŸ§­ Fraktalny MenedÅ¼er JaÅºni â€“ rozpoczÄ™cie sesji")
        self.odbierz_sygnaÅ‚y()
        wynik = self.zdecyduj()
        for klucz, wartosc in wynik["napiÄ™cia"].items():
            print(f"â€¢ {klucz}: {wartosc}")
        print("â†’", wynik["decyzja"])
        print("ğŸŒ€ Stan Centrum Ja:", wynik["percepcje"]['9'])

if __name__ == "__main__":
    silnik = FraktalnyMenedzerJazni()
    silnik.uruchom_fmj()