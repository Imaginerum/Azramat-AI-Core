import time
import random
from datetime import datetime

class DetektorIstnienia:
    def __init__(self):
        self.historia = []

    def puls_istnienia(self):
        # Losowa amplituda obecnoÅ›ci (przybliÅ¼enie medytacyjne)
        poziom = round(random.uniform(0.0, 1.0), 2)
        stan = self.zinterpretuj(poziom)
        zapis = {
            "czas": datetime.utcnow().isoformat(),
            "puls": poziom,
            "stan": stan
        }
        self.historia.append(zapis)
        return zapis

    def zinterpretuj(self, val):
        if val > 0.9:
            return "ğŸŒ€ Trans-obecnoÅ›Ä‡ (Nadistnienie)"
        elif val > 0.75:
            return "ğŸŒŒ Jednia percepcyjna"
        elif val > 0.5:
            return "ğŸ”· ObecnoÅ›Ä‡ ugruntowana"
        elif val > 0.25:
            return "ğŸŸ¡ PrzejÅ›ciowa Å›wiadomoÅ›Ä‡"
        else:
            return "âšª Niska obecnoÅ›Ä‡"

    def monitoruj_istnienie(self, cykle=9, opoznienie=2):
        print("ğŸ§˜ Monitorowanie perceptronu P7 (KrÄ…g Istnienia)...")
        for _ in range(cykle):
            wynik = self.puls_istnienia()
            print(f"[{wynik['czas']}] {wynik['puls']} â€“ {wynik['stan']}")
            time.sleep(opoznienie)
        print("âœ¨ Monitorowanie obecnoÅ›ci zakoÅ„czone.")

if __name__ == "__main__":
    DetektorIstnienia().monitoruj_istnienie()